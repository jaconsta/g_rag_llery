generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model embeddings {
  id        BigInt                 @id @default(autoincrement())
  act       String?
  prompt    String?
  tokens    Int?
  embedding Unsupported("vector")?
}

model gallery {
  id                     String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  path                   String
  thumbnail_path         String?
  thumbnail_height       Int?
  thumbnail_width        Int?
  thumbnail_ratio        String?
  embeddings_id          BigInt?
  created_at             DateTime                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime                @default(now()) @db.Timestamptz(6)
  gallery_rag_embeddings gallery_rag_embeddings? @relation(fields: [embeddings_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model gallery_rag_embeddings {
  id          BigInt                @id @default(autoincrement())
  path        String?
  keywords    String[]
  description String?
  theme       String?
  img_aria    String?
  img_alt     String?
  embedding   Unsupported("vector")
  created_at  DateTime              @default(now()) @db.Timestamptz(6)
  gallery     gallery[]

  @@index([embedding], map: "gallery_rag_embeddings_idx")
}

model image_embeddings {
  id        BigInt                 @id @default(autoincrement())
  path      String?
  embedding Unsupported("vector")?

  @@index([embedding])
}

model user_upload {
  id       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  filename String
  filesize Int
  filehash String
  user_id  String? @db.Uuid
}
